<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Noteworthy</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Noteworthy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>迁移并重新部署R包</title>
      <link>/posts/play/how-to-install-your-r-packages-quickly/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/play/how-to-install-your-r-packages-quickly/</guid>
      <description>备份升级R迁移R包并不靠谱，Rstudio 自带的Jobs工具很不好用，所以就重新安装一遍几乎所有的R包；
#设置清华源 options(&amp;quot;repos&amp;quot; = c(CRAN=&amp;quot;https://mirrors.tuna.tsinghua.edu.cn/CRAN/&amp;quot;)) install.packages(&amp;quot;devtools&amp;quot;) library(devtools) install_github(&amp;quot;YuLab-SMU/wget&amp;quot;) library(wget) #wget这个包真好用，特别是网络环境烂的时候 #至此再安装其他包 if (!</description>
    </item>
    
    <item>
      <title>FPKM RPKM TPM counts</title>
      <link>/posts/learnr/difference-of-fpkm-rpkm-tpm-counts/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/learnr/difference-of-fpkm-rpkm-tpm-counts/</guid>
      <description>记录标准化的概念以及一些步骤；理解加上收集
参考阅读： 跟着刘小泽一起回顾标准化方法 fpkm转化成tpm RNAseq数据，下载GEO中的FPKM文件后该怎么下游分析 标准化进行时
一般测序拿到的数据都是fpkm值，进行下游差异分析需要先将其转化为tpm再进行limma差异分析；转化为tpm之后仍需要判断是否对数据进行log标准化；
#一众转换函数 countToTpm &amp;lt;- function(counts, effLen) { rate &amp;lt;- log(counts) - log(effLen) denom &amp;lt;- log(sum(exp(rate))) exp(rate - denom + log(1e6)) } countToFpkm &amp;lt;- function(counts, effLen) { N &amp;lt;- sum(counts) exp( log(counts) + log(1e9) - log(effLen) - log(N) ) } fpkmToTpm &amp;lt;- function(fpkm) { exp(log(fpkm) - log(sum(fpkm)) + log(1e6)) } countToEffCounts &amp;lt;- function(counts, len, effLen) { counts * (len / effLen) } #计算TPM值，只需要用一下apply函数 tpms &amp;lt;- apply(expMatrix,2,fpkmToTpm) tpms[1:3,] #最后可以根据TPM的特征进行检查，看每列加和是否一致 colSums(tpms) 判断数据是否需要转换，果子的经验是10以内不需要 exprSet &amp;lt;- log2(exprSet+1) TPM值对总和应该是一致的，所以可以在此基础上对基因的表达量进行差异比较；虽然不是真的精确。</description>
    </item>
    
    <item>
      <title>如何聚类并挑选类</title>
      <link>/posts/learnr/how-to-cluster-your-samples-through-different-ways/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/learnr/how-to-cluster-your-samples-through-different-ways/</guid>
      <description>用来展示聚类三张图吧 这篇文章 提到了聚类展示的三张图，这里定义展示一下，也是对聚类概念的加强和理解； 原文地址 如何找到合适的聚类？
 不过我们可以基于不同聚类过程中使用的相似性算法和模块划分参数，选择一个最合适的数目。在K-means，PAM和层次聚类中选择合适的聚类数目，这些方法包括直接方法和统计检验方法。 1.直接方法 设置一些适合的划分标准，比如elbow和average silhouette法 2.</description>
    </item>
    
    <item>
      <title>热图 troubleshooting</title>
      <link>/posts/learnr/heatmap-troubleshooting/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/learnr/heatmap-troubleshooting/</guid>
      <description>热图问题，会持续更新
热图算是一个比较多的需求，基础使用上手比较快，但是想要美化的满意，需要下一番功夫。 这里使用 pheatmap 来画图
library(pheatmap) library(AnnoProbe) ls(&amp;quot;package:AnnoProbe&amp;quot;) # 查看包自带数据和函数 ex&amp;lt;-GSE95166$genes_expr ex&amp;lt;-GSE95166$genes_expr pheatmap(ex) group_list=c(rep(&amp;quot;N&amp;quot;,4),rep(&amp;quot;P&amp;quot;,4)) ac&amp;lt;-data.</description>
    </item>
    
    <item>
      <title>部署并安装博客写作环境</title>
      <link>/posts/play/deploy-your-blogs-on-github-through-blogdown/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/play/deploy-your-blogs-on-github-through-blogdown/</guid>
      <description>终于部署了写作环境，之前也知道hugo、jeklly、typeecho 或者 wordpress 等写作工具，当然也有微信公众号，但是一直懒着没能找到合适的动力去把他们彻底部署出来，虽然日常会使用trello等记录工具，但是长文字工具能长期保存在自留地的却没有，所以也算是终于部署成系列吧，会坚持写或者记录下去。
  工具：R studio、blogdown R 包、畅通的互联网</description>
    </item>
    
  </channel>
</rss>